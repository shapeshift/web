// ImageInSvg.tsx
import { Center, CircularProgress } from '@chakra-ui/react'
import type { AssetId } from '@shapeshiftoss/caip'
import { TradeType, TransferType } from '@shapeshiftoss/unchained-client'
import type { PropsWithChildren } from 'react'
import React, { useMemo } from 'react'
import { Method, type Transfer } from 'hooks/useTxDetails/useTxDetails'

import { AssetIcon } from './AssetIcon'

const StatusStyle = { svg: { width: '70%', height: '70%' } }

type AssetIconWithBadgeProps = {
  size?: 'xs' | 'sm' | 'md' | 'lg'
  assetId?: AssetId
  transfersByType: Record<TransferType, Transfer[]>
  type?: string
  isLoading?: boolean
} & PropsWithChildren

const defaultClipPath =
  'polygon( 37.122% 12.175%,37.122% 12.175%,36.79% 16.293%,35.828% 20.199%,34.288% 23.841%,32.224% 27.167%,29.687% 30.125%,26.729% 32.662%,23.403% 34.727%,19.761% 36.266%,15.855% 37.228%,11.737% 37.56%,11.737% 37.56%,11.437% 37.558%,11.138% 37.553%,10.84% 37.545%,10.543% 37.533%,10.247% 37.517%,9.952% 37.498%,9.657% 37.476%,9.364% 37.451%,9.071% 37.422%,8.779% 37.39%,8.779% 37.39%,7.696% 37.329%,6.618% 37.397%,5.568% 37.592%,4.566% 37.91%,3.635% 38.35%,2.795% 38.911%,2.067% 39.589%,1.474% 40.383%,1.036% 41.29%,0.775% 42.309%,0.775% 42.309%,0.667% 43.05%,0.57% 43.795%,0.483% 44.543%,0.408% 45.294%,0.345% 46.049%,0.292% 46.806%,0.251% 47.567%,0.222% 48.331%,0.205% 49.098%,0.199% 49.868%,0.199% 49.868%,0.843% 57.853%,2.709% 65.429%,5.694% 72.492%,9.697% 78.943%,14.618% 84.679%,20.354% 89.6%,26.805% 93.604%,33.869% 96.589%,41.444% 98.454%,49.43% 99.099%,49.43% 99.099%,57.415% 98.454%,64.99% 96.589%,72.054% 93.604%,78.505% 89.6%,84.241% 84.679%,89.162% 78.943%,93.165% 72.492%,96.15% 65.429%,98.016% 57.853%,98.66% 49.868%,98.66% 49.868%,98.016% 41.882%,96.15% 34.307%,93.165% 27.243%,89.162% 20.793%,84.241% 15.056%,78.505% 10.136%,72.054% 6.132%,64.99% 3.147%,57.415% 1.281%,49.43% 0.637%,49.43% 0.637%,48.66% 0.643%,47.893% 0.661%,47.129% 0.69%,46.368% 0.731%,45.61% 0.783%,44.856% 0.847%,44.104% 0.922%,43.357% 1.008%,42.612% 1.105%,41.871% 1.214%,41.871% 1.214%,40.852% 1.475%,39.945% 1.912%,39.151% 2.506%,38.473% 3.233%,37.912% 4.073%,37.472% 5.005%,37.153% 6.006%,36.959% 7.057%,36.891% 8.134%,36.951% 9.218%,36.951% 9.218%,36.983% 9.509%,37.012% 9.802%,37.038% 10.095%,37.06% 10.39%,37.079% 10.685%,37.094% 10.982%,37.106% 11.279%,37.115% 11.577%,37.12% 11.876%,37.122% 12.175% );'
const bottomClipPath =
  'polygon( 28.802% 92.365%,28.802% 92.365%,28.788% 92.744%,28.821% 93.115%,28.9% 93.476%,29.023% 93.82%,29.188% 94.145%,29.392% 94.447%,29.633% 94.721%,29.909% 94.964%,30.217% 95.172%,30.557% 95.34%,30.557% 95.34%,32.318% 96.033%,34.111% 96.659%,35.935% 97.218%,37.788% 97.707%,39.669% 98.126%,41.576% 98.472%,43.507% 98.743%,45.46% 98.94%,47.435% 99.059%,49.43% 99.099%,49.43% 99.099%,57.414% 98.454%,64.988% 96.588%,72.052% 93.603%,78.503% 89.599%,84.239% 84.677%,89.16% 78.941%,93.164% 72.49%,96.15% 65.427%,98.016% 57.852%,98.66% 49.868%,98.66% 49.868%,98.606% 47.537%,98.444% 45.234%,98.178% 42.962%,97.81% 40.722%,97.341% 38.517%,96.776% 36.35%,96.116% 34.223%,95.365% 32.138%,94.523% 30.098%,93.595% 28.105%,93.595% 28.105%,93.405% 27.777%,93.178% 27.482%,92.918% 27.223%,92.628% 27%,92.314% 26.816%,91.979% 26.673%,91.627% 26.572%,91.263% 26.517%,90.89% 26.507%,90.513% 26.546%,90.513% 26.546%,80.924% 28.833%,71.857% 32.313%,63.4% 36.895%,55.643% 42.491%,48.676% 49.013%,42.587% 56.369%,37.465% 64.472%,33.402% 73.232%,30.484% 82.559%,28.802% 92.365% );'
const topClipPath =
  'polygon( 89.988% 21.951%,89.988% 21.951%,89.987% 21.952%,89.986% 21.953%,89.985% 21.953%,89.984% 21.954%,89.983% 21.954%,89.982% 21.954%,89.98% 21.954%,89.979% 21.953%,89.978% 21.953%,89.977% 21.952%,89.977% 21.952%,87.135% 18.227%,83.959% 14.792%,80.475% 11.671%,76.705% 8.888%,72.673% 6.467%,68.404% 4.433%,63.921% 2.808%,59.248% 1.618%,54.41% 0.886%,49.43% 0.637%,49.43% 0.637%,48.66% 0.643%,47.894% 0.661%,47.13% 0.69%,46.37% 0.731%,45.612% 0.783%,44.858% 0.846%,44.107% 0.92%,43.36% 1.005%,42.616% 1.101%,41.876% 1.206%,41.876% 1.206%,40.856% 1.468%,39.947% 1.905%,39.153% 2.498%,38.475% 3.225%,37.914% 4.064%,37.474% 4.995%,37.155% 5.995%,36.961% 7.045%,36.893% 8.122%,36.953% 9.206%,36.953% 9.206%,36.984% 9.497%,37.012% 9.79%,37.037% 10.083%,37.059% 10.377%,37.078% 10.672%,37.093% 10.967%,37.106% 11.264%,37.115% 11.562%,37.12% 11.861%,37.122% 12.16%,37.122% 12.16%,36.789% 16.277%,35.827% 20.182%,34.288% 23.824%,32.223% 27.15%,29.685% 30.108%,26.727% 32.646%,23.401% 34.711%,19.759% 36.25%,15.854% 37.212%,11.737% 37.545%,11.737% 37.545%,11.438% 37.543%,11.139% 37.538%,10.841% 37.529%,10.545% 37.516%,10.249% 37.501%,9.954% 37.482%,9.66% 37.46%,9.367% 37.434%,9.075% 37.406%,8.783% 37.376%,8.783% 37.376%,7.699% 37.316%,6.622% 37.384%,5.572% 37.578%,4.572% 37.897%,3.641% 38.337%,2.802% 38.898%,2.075% 39.576%,1.482% 40.37%,1.045% 41.278%,0.783% 42.299%,0.783% 42.299%,0.674% 43.039%,0.576% 43.783%,0.491% 44.53%,0.417% 45.281%,0.354% 46.035%,0.304% 46.793%,0.264% 47.553%,0.236% 48.317%,0.22% 49.083%,0.214% 49.852%,0.214% 49.852%,0.446% 54.659%,1.127% 59.333%,2.235% 63.853%,3.75% 68.199%,5.648% 72.349%,7.91% 76.281%,10.513% 79.974%,13.436% 83.407%,16.657% 86.559%,20.154% 89.407%,20.154% 89.407%,20.715% 89.735%,21.3% 89.917%,21.892% 89.963%,22.473% 89.883%,23.029% 89.687%,23.54% 89.384%,23.992% 88.983%,24.366% 88.495%,24.647% 87.927%,24.816% 87.291%,24.816% 87.291%,27.063% 77.5%,30.482% 68.209%,34.99% 59.503%,40.502% 51.463%,46.934% 44.175%,54.203% 37.722%,62.226% 32.188%,70.918% 27.656%,80.196% 24.21%,89.975% 21.933%,89.975% 21.933%,89.978% 21.933%,89.98% 21.934%,89.983% 21.935%,89.985% 21.936%,89.987% 21.938%,89.988% 21.94%,89.989% 21.943%,89.989% 21.945%,89.989% 21.948%,89.988% 21.951%,89.988% 21.951% );'

export const AssetIconWithBadge: React.FC<AssetIconWithBadgeProps> = ({
  size,
  assetId,
  transfersByType,
  type,
  children,
  isLoading,
}) => {
  const txData = useMemo(() => {
    switch (type) {
      case TransferType.Send:
        return transfersByType?.Send ? [...transfersByType.Send] : []
      case TransferType.Receive:
        return transfersByType?.Receive ? [...transfersByType.Receive] : []
      case TradeType.Trade:
      case TradeType.Swap:
      case TradeType.Refund:
        return [...(transfersByType?.Send || []), ...(transfersByType?.Receive || [])]
      case 'method':
        return transfersByType?.Contract ? [...transfersByType.Contract] : []
      default:
        return []
    }
  }, [transfersByType, type])

  const renderIcons = useMemo(() => {
    if (!txData) return null

    return txData.map((send, index) => {
      const compareIndex = index + 1
      const clipPath =
        compareIndex === 1 && txData.length > 1
          ? topClipPath
          : compareIndex === 2
          ? bottomClipPath
          : defaultClipPath
      return (
        <AssetIcon
          showNetworkIcon={false}
          key={send.assetId}
          assetId={send.assetId}
          clipPath={clipPath}
          name={send.asset.name}
          size={size}
          position={compareIndex === 2 ? 'absolute' : 'relative'}
        />
      )
    })
  }, [size, txData])
  return (
    <>
      <Center position='relative'>
        <Center position='absolute' left='-10%' top='-10%' boxSize='40%' sx={StatusStyle}>
          <Center borderRadius='full' bg='blue.500' boxSize='100%'>
            {isLoading ? (
              <CircularProgress
                size='0.95em'
                trackColor='whiteAlpha.50'
                color='white'
                isIndeterminate
              />
            ) : (
              children
            )}
          </Center>
        </Center>
        {assetId ? (
          <AssetIcon
            showNetworkIcon={false}
            assetId={assetId}
            clipPath={defaultClipPath}
            size={size}
          />
        ) : (
          renderIcons
        )}
      </Center>
    </>
  )
}
