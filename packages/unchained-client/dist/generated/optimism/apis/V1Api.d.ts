/**
 * @shapeshiftoss/optimism-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Account, BaseInfo, BaseTxHistoryTx, OptimismGasEstimate, OptimismGasFees, SendTxBody, TokenMetadata, TokenType, Tx } from '../models';
export interface EstimateGasRequest {
    data: string;
    from: string;
    to: string;
    value: string;
}
export interface GetAccountRequest {
    pubkey: string;
}
export interface GetTokenMetadataRequest {
    contract: string;
    id: string;
    type: TokenType;
}
export interface GetTransactionRequest {
    txid: string;
}
export interface GetTxHistoryRequest {
    pubkey: string;
    cursor?: string;
    pageSize?: number;
}
export interface SendTxRequest {
    sendTxBody: SendTxBody;
}
/**
 *
 */
export declare class V1Api extends runtime.BaseAPI {
    /**
     * Get the estimated gas cost of a transaction
     */
    estimateGasRaw(requestParameters: EstimateGasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OptimismGasEstimate>>;
    /**
     * Get the estimated gas cost of a transaction
     */
    estimateGas(requestParameters: EstimateGasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OptimismGasEstimate>;
    /**
     * Get account details by address
     */
    getAccountRaw(requestParameters: GetAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Account>>;
    /**
     * Get account details by address
     */
    getAccount(requestParameters: GetAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Account>;
    /**
     * Get the current recommended gas fees to use in a transaction  * `l1GasPrice` = l1BaseFee * scalar
     */
    getGasFeesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OptimismGasFees>>;
    /**
     * Get the current recommended gas fees to use in a transaction  * `l1GasPrice` = l1BaseFee * scalar
     */
    getGasFees(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OptimismGasFees>;
    /**
     * Get information about the running coinstack
     */
    getInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BaseInfo>>;
    /**
     * Get information about the running coinstack
     */
    getInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BaseInfo>;
    /**
     * Get token metadata
     */
    getTokenMetadataRaw(requestParameters: GetTokenMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokenMetadata>>;
    /**
     * Get token metadata
     */
    getTokenMetadata(requestParameters: GetTokenMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokenMetadata>;
    /**
     * Get transaction details
     */
    getTransactionRaw(requestParameters: GetTransactionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Tx>>;
    /**
     * Get transaction details
     */
    getTransaction(requestParameters: GetTransactionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tx>;
    /**
     * Get transaction history by address
     */
    getTxHistoryRaw(requestParameters: GetTxHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BaseTxHistoryTx>>;
    /**
     * Get transaction history by address
     */
    getTxHistory(requestParameters: GetTxHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BaseTxHistoryTx>;
    /**
     * Broadcast signed raw transaction
     */
    sendTxRaw(requestParameters: SendTxRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * Broadcast signed raw transaction
     */
    sendTx(requestParameters: SendTxRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
}
