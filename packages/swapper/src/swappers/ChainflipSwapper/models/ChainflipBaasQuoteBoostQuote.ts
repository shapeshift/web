// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Chainflip Broker as a Service
 * Run your own Chainflip Broker without any hassle.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChainflipBaasQuoteEstimatedDurationsSeconds } from './ChainflipBaasQuoteEstimatedDurationsSeconds';
import {
    ChainflipBaasQuoteEstimatedDurationsSecondsFromJSON,
    ChainflipBaasQuoteEstimatedDurationsSecondsFromJSONTyped,
    ChainflipBaasQuoteEstimatedDurationsSecondsToJSON,
} from './ChainflipBaasQuoteEstimatedDurationsSeconds';
import type { ChainflipBaasQuotePoolInfo } from './ChainflipBaasQuotePoolInfo';
import {
    ChainflipBaasQuotePoolInfoFromJSON,
    ChainflipBaasQuotePoolInfoFromJSONTyped,
    ChainflipBaasQuotePoolInfoToJSON,
} from './ChainflipBaasQuotePoolInfo';
import type { ChainflipBaasQuoteQuoteFee } from './ChainflipBaasQuoteQuoteFee';
import {
    ChainflipBaasQuoteQuoteFeeFromJSON,
    ChainflipBaasQuoteQuoteFeeFromJSONTyped,
    ChainflipBaasQuoteQuoteFeeToJSON,
} from './ChainflipBaasQuoteQuoteFee';

/**
 * An optional quote to have the swap boosted.
 * @export
 * @interface ChainflipBaasQuoteBoostQuote
 */
export interface ChainflipBaasQuoteBoostQuote {
    /**
     * The asset to send.
     * @type {string}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    ingressAsset?: string;
    /**
     * The amount to send.
     * @type {number}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    ingressAmount?: number;
    /**
     * The amount to send in native units.
     * @type {string}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly ingressAmountNative?: string;
    /**
     * The asset used as intermediary.
     * @type {string}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    intermediateAsset?: string | null;
    /**
     * The amount used as intermediary.
     * @type {number}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly intermediateAmount?: number | null;
    /**
     * The amount used as intermediary in native units.
     * @type {string}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly intermediateAmountNative?: string | null;
    /**
     * The asset to receive.
     * @type {string}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    egressAsset?: string;
    /**
     * The amount to receive.
     * @type {number}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly egressAmount?: number;
    /**
     * The amount to receive in native units.
     * @type {string}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly egressAmountNative?: string;
    /**
     * The fee structure, this includes all fees.
     * @type {Array<ChainflipBaasQuoteQuoteFee>}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly includedFees?: Array<ChainflipBaasQuoteQuoteFee>;
    /**
     * A warning in case liquidity is low and there is a risk of high slippage.
     * @type {boolean}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly lowLiquidityWarning?: boolean;
    /**
     * Liquidity pools involved in the swap, as well as estimated liquidity provider fees.
     * @type {Array<ChainflipBaasQuotePoolInfo>}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly poolInfo?: Array<ChainflipBaasQuotePoolInfo>;
    /**
     * The estimated time the swap will take.
     * @type {number}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly estimatedDurationSeconds?: number;
    /**
     * 
     * @type {ChainflipBaasQuoteEstimatedDurationsSeconds}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    estimatedDurationsSeconds?: ChainflipBaasQuoteEstimatedDurationsSeconds;
    /**
     * The estimated fee (in bps) that the user has to pay (from the deposit amount) to get this swap boosted.
     * @type {number}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly estimatedBoostFeeBps?: number;
    /**
     * The number of "sub-swaps" to perform for a DCA swap.
     * @type {number}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly chunkIntervalBlocks?: number | null;
    /**
     * The delay between the "sub-swaps" of a DCA swap in number of blocks.
     * @type {number}
     * @memberof ChainflipBaasQuoteBoostQuote
     */
    readonly numberOfChunks?: number | null;
}

/**
 * Check if a given object implements the ChainflipBaasQuoteBoostQuote interface.
 */
export function instanceOfChainflipBaasQuoteBoostQuote(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChainflipBaasQuoteBoostQuoteFromJSON(json: any): ChainflipBaasQuoteBoostQuote {
    return ChainflipBaasQuoteBoostQuoteFromJSONTyped(json, false);
}

export function ChainflipBaasQuoteBoostQuoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainflipBaasQuoteBoostQuote {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ingressAsset': !exists(json, 'ingressAsset') ? undefined : json['ingressAsset'],
        'ingressAmount': !exists(json, 'ingressAmount') ? undefined : json['ingressAmount'],
        'ingressAmountNative': !exists(json, 'ingressAmountNative') ? undefined : json['ingressAmountNative'],
        'intermediateAsset': !exists(json, 'intermediateAsset') ? undefined : json['intermediateAsset'],
        'intermediateAmount': !exists(json, 'intermediateAmount') ? undefined : json['intermediateAmount'],
        'intermediateAmountNative': !exists(json, 'intermediateAmountNative') ? undefined : json['intermediateAmountNative'],
        'egressAsset': !exists(json, 'egressAsset') ? undefined : json['egressAsset'],
        'egressAmount': !exists(json, 'egressAmount') ? undefined : json['egressAmount'],
        'egressAmountNative': !exists(json, 'egressAmountNative') ? undefined : json['egressAmountNative'],
        'includedFees': !exists(json, 'includedFees') ? undefined : ((json['includedFees'] as Array<any>).map(ChainflipBaasQuoteQuoteFeeFromJSON)),
        'lowLiquidityWarning': !exists(json, 'lowLiquidityWarning') ? undefined : json['lowLiquidityWarning'],
        'poolInfo': !exists(json, 'poolInfo') ? undefined : ((json['poolInfo'] as Array<any>).map(ChainflipBaasQuotePoolInfoFromJSON)),
        'estimatedDurationSeconds': !exists(json, 'estimatedDurationSeconds') ? undefined : json['estimatedDurationSeconds'],
        'estimatedDurationsSeconds': !exists(json, 'estimatedDurationsSeconds') ? undefined : ChainflipBaasQuoteEstimatedDurationsSecondsFromJSON(json['estimatedDurationsSeconds']),
        'estimatedBoostFeeBps': !exists(json, 'estimatedBoostFeeBps') ? undefined : json['estimatedBoostFeeBps'],
        'chunkIntervalBlocks': !exists(json, 'chunkIntervalBlocks') ? undefined : json['chunkIntervalBlocks'],
        'numberOfChunks': !exists(json, 'numberOfChunks') ? undefined : json['numberOfChunks'],
    };
}

export function ChainflipBaasQuoteBoostQuoteToJSON(value?: ChainflipBaasQuoteBoostQuote | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ingressAsset': value.ingressAsset,
        'ingressAmount': value.ingressAmount,
        'intermediateAsset': value.intermediateAsset,
        'egressAsset': value.egressAsset,
        'estimatedDurationsSeconds': ChainflipBaasQuoteEstimatedDurationsSecondsToJSON(value.estimatedDurationsSeconds),
    };
}

