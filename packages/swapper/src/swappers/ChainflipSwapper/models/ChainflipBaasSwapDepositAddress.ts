// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Chainflip Broker as a Service
 * Run your own Chainflip Broker without any hassle.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChainflipBaasSwapDepositAddress
 */
export interface ChainflipBaasSwapDepositAddress {
    /**
     * The swap id used to follow up status.
     * @type {number}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    id?: number | null;
    /**
     * The deposit address to send source assets to.
     * @type {string}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly address?: string;
    /**
     * The block in which the deposit address was issued.
     * @type {number}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly issuedBlock?: number;
    /**
     * The network to send the source assets over.
     * @type {string}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly network?: string;
    /**
     * The channel id to monitor the deposit.
     * @type {number}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly channelId?: number;
    /**
     * The block (on the source network) in which the deposit address will expire.
     * @type {number}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly sourceExpiryBlock?: number;
    /**
     * The explorer url to monitor the deposit.
     * @type {string}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly explorerUrl?: string;
    /**
     * Fee in $FLIP to open the deposit channel.
     * @type {number}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly channelOpeningFee?: number;
    /**
     * Fee in $FLIP flipperinos to open the deposit channel.
     * @type {string}
     * @memberof ChainflipBaasSwapDepositAddress
     */
    readonly channelOpeningFeeNative?: string;
}

/**
 * Check if a given object implements the ChainflipBaasSwapDepositAddress interface.
 */
export function instanceOfChainflipBaasSwapDepositAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChainflipBaasSwapDepositAddressFromJSON(json: any): ChainflipBaasSwapDepositAddress {
    return ChainflipBaasSwapDepositAddressFromJSONTyped(json, false);
}

export function ChainflipBaasSwapDepositAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainflipBaasSwapDepositAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'issuedBlock': !exists(json, 'issuedBlock') ? undefined : json['issuedBlock'],
        'network': !exists(json, 'network') ? undefined : json['network'],
        'channelId': !exists(json, 'channelId') ? undefined : json['channelId'],
        'sourceExpiryBlock': !exists(json, 'sourceExpiryBlock') ? undefined : json['sourceExpiryBlock'],
        'explorerUrl': !exists(json, 'explorerUrl') ? undefined : json['explorerUrl'],
        'channelOpeningFee': !exists(json, 'channelOpeningFee') ? undefined : json['channelOpeningFee'],
        'channelOpeningFeeNative': !exists(json, 'channelOpeningFeeNative') ? undefined : json['channelOpeningFeeNative'],
    };
}

export function ChainflipBaasSwapDepositAddressToJSON(value?: ChainflipBaasSwapDepositAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
    };
}

