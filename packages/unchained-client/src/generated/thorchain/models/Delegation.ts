// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Thorchain Unchained API
 * Provides access to thorchain chain data.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Validator } from './Validator';
import {
    ValidatorFromJSON,
    ValidatorFromJSONTyped,
    ValidatorToJSON,
} from './Validator';
import type { Value } from './Value';
import {
    ValueFromJSON,
    ValueFromJSONTyped,
    ValueToJSON,
} from './Value';

/**
 * Contains info about a staking delegation
 * @export
 * @interface Delegation
 */
export interface Delegation {
    /**
     * 
     * @type {Value}
     * @memberof Delegation
     */
    balance: Value;
    /**
     * 
     * @type {string}
     * @memberof Delegation
     */
    shares: string;
    /**
     * 
     * @type {Validator}
     * @memberof Delegation
     */
    validator: Validator;
}

/**
 * Check if a given object implements the Delegation interface.
 */
export function instanceOfDelegation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "balance" in value;
    isInstance = isInstance && "shares" in value;
    isInstance = isInstance && "validator" in value;

    return isInstance;
}

export function DelegationFromJSON(json: any): Delegation {
    return DelegationFromJSONTyped(json, false);
}

export function DelegationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Delegation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'balance': ValueFromJSON(json['balance']),
        'shares': json['shares'],
        'validator': ValidatorFromJSON(json['validator']),
    };
}

export function DelegationToJSON(value?: Delegation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'balance': ValueToJSON(value.balance),
        'shares': value.shares,
        'validator': ValidatorToJSON(value.validator),
    };
}

