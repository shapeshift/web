name: Bootstrap

on:
  pull_request:
    branches:
      - main
      - develop
      - releases/**

jobs:
  install-and-cache:
    runs-on: ubuntu-latest
    env:
      REACT_APP_UNCHAINED_ETHEREUM_HTTP_URL: https://dev-api.ethereum.shapeshift.com
      REACT_APP_UNCHAINED_ETHEREUM_WS_URL: wss://dev-api.ethereum.shapeshift.com
      REACT_APP_UNCHAINED_BITCOIN_HTTP_URL: https://dev-api.bitcoin.shapeshift.com
      REACT_APP_UNCHAINED_BITCOIN_WS_URL: wss://dev-api.bitcoin.shapeshift.com
      REACT_APP_PORTIS_DAPP_ID: 8609e6a8-e0dc-45e6-a0ad-edde63a4cdda
      REACT_APP_ETHEREUM_NODE_URL: https://mainnet.infura.io/v3/d734c7eebcdf400185d7eb67322a7e57
      REACT_APP_FEATURE_COSMOS_INVESTOR: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Restore the previous yarn modules and Cypress binary archives.
      # Any updated archives will be saved automatically after the entire
      # workflow successfully finishes.
      # We use exact restore key to avoid yarn module snowballing
      # https://glebbahmutov.com/blog/do-not-let-npm-cache-snowball/
      - name: Cache central yarn modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}

      # We use the exact restore key to avoid Cypress binary snowballing
      # https://glebbahmutov.com/blog/do-not-let-cypress-cache-snowball/
      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}

      # Cache local node_modules to pass to testing jobs
      - name: Cache local node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: Cache build folder
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ github.ref }}-
            
      - name: install dependencies and verify Cypress
        env:
          # Make sure every Cypress install prints minimal information
          CI: 1
        run: |
          yarn install --frozen-lockfile
          npx cypress cache path
          npx cypress cache list
          npx cypress verify
          npx cypress info

      - name: build
        run: yarn run build

  call-pr-workflow:
    uses: ./.github/workflows/pr.yml
    needs: [install-and-cache]
  call-pr-cypress-workflow:
    uses: ./.github/workflows/pr-cypress.yml
    needs: [install-and-cache]
