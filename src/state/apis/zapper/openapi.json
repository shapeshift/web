{
   "openapi":"3.0.0",
   "paths":{
      "/v2/apps/{appSlug}/positions":{
         "get":{
            "operationId":"PositionController_getContractPositions",
            "summary":"Application Positions",
            "description":"Retrieve positions (non-tokenized) for a given application",
            "parameters":[
               {
                  "name":"appSlug",
                  "required":true,
                  "in":"path",
                  "description":"Slug of the application for which to retrieve contract positions.",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"network",
                  "required":true,
                  "in":"query",
                  "description":"Retrieve positions for this network",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               },
               {
                  "name":"groupId",
                  "required":true,
                  "in":"query",
                  "description":"Retrieve specific position group within the app",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Apps"
            ]
         }
      },
      "/v2/apps/{appSlug}/tokens":{
         "get":{
            "operationId":"PositionController_getTokens",
            "summary":"Application Tokens",
            "description":"Retrieve tokens for a given application",
            "parameters":[
               {
                  "name":"appSlug",
                  "required":true,
                  "in":"path",
                  "description":"Slug of the application for which to retrieve contract positions.",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"network",
                  "required":true,
                  "in":"query",
                  "description":"Retrieve positions for this network",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               },
               {
                  "name":"groupId",
                  "required":true,
                  "in":"query",
                  "description":"Retrieve specific position group within the app",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Apps"
            ]
         }
      },
      "/v2/prices":{
         "get":{
            "operationId":"PricesController_listPricesV3",
            "summary":"Token Prices",
            "description":"Retrieve supported tokens and their prices",
            "parameters":[
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Retrieve prices for this network",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Miscellaneous Data Endpoints"
            ]
         }
      },
      "/v2/nft/balances/net-worth":{
         "get":{
            "operationId":"NftController_getNetWorth",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"User addresses",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "NFT Balances"
            ]
         }
      },
      "/v2/nft/balances/collections":{
         "get":{
            "operationId":"NftController_getBalanceCollections",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"User addresses",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"minCollectionValueUsd",
                  "required":false,
                  "in":"query",
                  "description":"Returns only collections with an estimated value above",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"search",
                  "required":false,
                  "in":"query",
                  "description":"Returns only collections with name starting with",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"collectionAddresses[]",
                  "required":false,
                  "in":"query",
                  "description":"Returns only collections provided",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from network provided",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               },
               {
                  "name":"limit",
                  "required":false,
                  "in":"query",
                  "description":"Maximum items to return. Limited to 25.",
                  "schema":{
                     "default":"25",
                     "type":"string"
                  }
               },
               {
                  "name":"cursor",
                  "required":false,
                  "in":"query",
                  "description":"Cursor used to paginate the results",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "NFT Balances"
            ]
         }
      },
      "/v2/nft/balances/collections-totals":{
         "get":{
            "operationId":"NftController_getBalanceCollectionsTotals",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"User addresses",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"minCollectionValueUsd",
                  "required":false,
                  "in":"query",
                  "description":"Returns only collections with an estimated value above",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"search",
                  "required":false,
                  "in":"query",
                  "description":"Returns only collections with name starting with",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"collectionAddresses[]",
                  "required":false,
                  "in":"query",
                  "description":"Returns only collections provided",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from network provided",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "NFT Balances"
            ]
         }
      },
      "/v2/nft/user/tokens":{
         "get":{
            "operationId":"NftController_getUserTokens",
            "parameters":[
               {
                  "name":"userAddress",
                  "required":true,
                  "in":"query",
                  "description":"User address",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Network",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               },
               {
                  "name":"limit",
                  "required":false,
                  "in":"query",
                  "description":"Number of results returned per page",
                  "schema":{
                     "maximum":100,
                     "default":50,
                     "type":"string"
                  }
               },
               {
                  "name":"cursor",
                  "required":false,
                  "in":"query",
                  "description":"Cursor",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "NFT Balances"
            ]
         }
      },
      "/v2/nft/balances/tokens":{
         "get":{
            "operationId":"NftController_getBalanceTokens",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"User addresses",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"minEstimatedValueUsd",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens with an estimated value above",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"search",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from collections with name starting with",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"collectionAddresses[]",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from collections provided",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from network provided",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               },
               {
                  "name":"limit",
                  "required":false,
                  "in":"query",
                  "description":"Maximum items to return. Limited and defaults to 25.",
                  "schema":{
                     "default":"25",
                     "type":"string"
                  }
               },
               {
                  "name":"cursor",
                  "required":false,
                  "in":"query",
                  "description":"Cursor used to paginate the results",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "NFT Balances"
            ]
         }
      },
      "/v2/nft/balances/tokens-totals":{
         "get":{
            "operationId":"NftController_getBalanceTokensTotals",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"User addresses",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"minEstimatedValueUsd",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens with an estimated value above",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"search",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from collections with name starting with",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"collectionAddresses[]",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from collections provided",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Returns only tokens from network provided",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "NFT Balances"
            ]
         }
      },
      "/v2/api-clients/points":{
         "get":{
            "operationId":"ApiClientController_points",
            "summary":"API Client Points",
            "description":"Get stats about the API client points",
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "API Clients"
            ]
         }
      },
      "/v2/nft/collection/tokens":{
         "get":{
            "operationId":"NftCollectionController_getCollectionTokens",
            "parameters":[
               {
                  "name":"collectionAddress",
                  "required":true,
                  "in":"query",
                  "description":"Collection address",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"network",
                  "required":true,
                  "in":"query",
                  "description":"Network",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               },
               {
                  "name":"cursor",
                  "required":false,
                  "in":"query",
                  "description":"Cursor",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"tokenIds[]",
                  "required":false,
                  "in":"query",
                  "description":"Specific NFT token ids of the collection",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ]
         }
      },
      "/v2/apps":{
         "get":{
            "operationId":"AppsController_getApps",
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Apps"
            ]
         }
      },
      "/v2/apps/{appSlug}":{
         "get":{
            "operationId":"AppsController_getApp",
            "parameters":[
               {
                  "name":"appSlug",
                  "required":true,
                  "in":"path",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Apps"
            ]
         }
      },
      "/v2/apps/{appSlug}/balances":{
         "get":{
            "operationId":"BalanceController_getAppBalancesOld",
            "parameters":[
               {
                  "name":"appSlug",
                  "required":true,
                  "in":"path",
                  "description":"Slug of the application for which to retrieve the wallet balances",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"Addresses for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Retrieve application balances for this network",
                  "schema":{
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         }
      },
      "/v2/balances":{
         "get":{
            "operationId":"BalanceController_getBalances",
            "summary":"Balances",
            "description":"Gets the balances for a set of addresses. Use `/v2/balances/apps` for app balances instead.",
            "deprecated":true,
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"Addresses for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"networks[]",
                  "required":false,
                  "in":"query",
                  "description":"Networks for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "ethereum",
                           "polygon",
                           "optimism",
                           "gnosis",
                           "binance-smart-chain",
                           "fantom",
                           "avalanche",
                           "arbitrum",
                           "celo",
                           "harmony",
                           "moonriver",
                           "bitcoin",
                           "cronos",
                           "aurora",
                           "evmos"
                        ]
                     }
                  }
               },
               {
                  "name":"bundled",
                  "required":false,
                  "in":"query",
                  "description":"Set to false to receive balance individually for each addresses, instead of bundled together",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         }
      },
      "/v1/balances-v3":{
         "get":{
            "operationId":"BalanceController_getBalances",
            "summary":"Balances",
            "description":"Gets the balances for a set of addresses. Use `/v2/balances/apps` for app balances instead.",
            "deprecated":true,
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"Addresses for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"networks[]",
                  "required":false,
                  "in":"query",
                  "description":"Networks for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "ethereum",
                           "polygon",
                           "optimism",
                           "gnosis",
                           "binance-smart-chain",
                           "fantom",
                           "avalanche",
                           "arbitrum",
                           "celo",
                           "harmony",
                           "moonriver",
                           "bitcoin",
                           "cronos",
                           "aurora",
                           "evmos"
                        ]
                     }
                  }
               },
               {
                  "name":"bundled",
                  "required":false,
                  "in":"query",
                  "description":"Set to false to receive balance individually for each addresses, instead of bundled together",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         }
      },
      "/v2/balances/apps":{
         "get":{
            "operationId":"BalanceController_getAppBalances",
            "summary":"Balances",
            "description":"Gets the app balances for a set of addresses and set of networks.",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"Addresses for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"networks[]",
                  "required":false,
                  "in":"query",
                  "description":"Networks for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "ethereum",
                           "polygon",
                           "optimism",
                           "gnosis",
                           "binance-smart-chain",
                           "fantom",
                           "avalanche",
                           "arbitrum",
                           "celo",
                           "harmony",
                           "moonriver",
                           "bitcoin",
                           "cronos",
                           "aurora",
                           "evmos"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         },
         "post":{
            "operationId":"BalanceController_postAppBalances",
            "summary":"Balances",
            "description":"Recomputes the app balances for a set of addresses and set of networks.",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"Addresses for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"networks[]",
                  "required":false,
                  "in":"query",
                  "description":"Networks for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "ethereum",
                           "polygon",
                           "optimism",
                           "gnosis",
                           "binance-smart-chain",
                           "fantom",
                           "avalanche",
                           "arbitrum",
                           "celo",
                           "harmony",
                           "moonriver",
                           "bitcoin",
                           "cronos",
                           "aurora",
                           "evmos"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "202":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         }
      },
      "/v2/balances/tokens":{
         "get":{
            "operationId":"BalanceController_getTokenBalances",
            "summary":"Balances",
            "description":"Gets the token balances for a set of addresses and set of networks.",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"Addresses for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"networks[]",
                  "required":false,
                  "in":"query",
                  "description":"Networks for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "ethereum",
                           "polygon",
                           "optimism",
                           "gnosis",
                           "binance-smart-chain",
                           "fantom",
                           "avalanche",
                           "arbitrum",
                           "celo",
                           "harmony",
                           "moonriver",
                           "bitcoin",
                           "cronos",
                           "aurora",
                           "evmos"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         },
         "post":{
            "operationId":"BalanceController_postTokenBalances",
            "summary":"Balances",
            "description":"Recomputes the token balances for a set of addresses and set of networks.",
            "parameters":[
               {
                  "name":"addresses[]",
                  "required":true,
                  "in":"query",
                  "description":"Addresses for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"networks[]",
                  "required":false,
                  "in":"query",
                  "description":"Networks for which to retrieve balances",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "ethereum",
                           "polygon",
                           "optimism",
                           "gnosis",
                           "binance-smart-chain",
                           "fantom",
                           "avalanche",
                           "arbitrum",
                           "celo",
                           "harmony",
                           "moonriver",
                           "bitcoin",
                           "cronos",
                           "aurora",
                           "evmos"
                        ]
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         }
      },
      "/v2/balances/job-status":{
         "get":{
            "operationId":"BalanceController_getBalanceJobStatus",
            "summary":"Balances",
            "description":"Gets the status of a single balance computation job.",
            "parameters":[
               {
                  "name":"jobId",
                  "required":true,
                  "in":"query",
                  "description":"Id of the job for which to retrieve the status",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Balances"
            ]
         }
      },
      "/v2/gas-prices":{
         "get":{
            "operationId":"GasPriceController_getGasPrice",
            "summary":"Gas Price",
            "description":"Retrieve a gas price aggregated from multiple different sources",
            "parameters":[
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Retrieve gas price for this network",
                  "schema":{
                     "default":"ethereum",
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               },
               {
                  "name":"eip1559",
                  "required":true,
                  "in":"query",
                  "description":"Retrieve post London gas price details",
                  "schema":{
                     "default":false,
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/GasPricesResponse"
                        }
                     }
                  }
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Miscellaneous Data Endpoints"
            ]
         }
      },
      "/v2/exchange/price":{
         "get":{
            "operationId":"ExchangeController_getExchangePrice",
            "summary":"Exchange Price",
            "description":"Returns data about the amount received if a trade would be made. **Should be called whenever a price needs to be calculated.**",
            "parameters":[
               {
                  "name":"gasPrice",
                  "required":false,
                  "in":"query",
                  "description":"Gas price (wei)",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"maxFeePerGas",
                  "required":false,
                  "in":"query",
                  "description":"Max gas fee (wei)",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"maxPriorityFeePerGas",
                  "required":false,
                  "in":"query",
                  "description":"Max priority gas fee (wei)",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sellTokenAddress",
                  "required":true,
                  "in":"query",
                  "description":"Address of the token that is being sold",
                  "examples":{
                     "ETH":{
                        "value":"0x0000000000000000000000000000000000000000"
                     },
                     "USDC":{
                        "value":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"buyTokenAddress",
                  "required":true,
                  "in":"query",
                  "description":"Address of the token that is being bought",
                  "examples":{
                     "ETH":{
                        "value":"0x0000000000000000000000000000000000000000"
                     },
                     "USDC":{
                        "value":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sellAmount",
                  "required":false,
                  "in":"query",
                  "description":"Amount to sell in base units, if provided dont provide `buyAmount`",
                  "examples":{
                     "1 Ether":{
                        "value":"1000000000000000000"
                     },
                     "1 USDC":{
                        "value":"1000000"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"buyAmount",
                  "required":false,
                  "in":"query",
                  "description":"Amount to buy in base units, if provided dont provide `sellAmount`",
                  "examples":{
                     "1 Ether":{
                        "value":"1000000000000000000"
                     },
                     "1 USDC":{
                        "value":"1000000"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ownerAddress",
                  "required":false,
                  "in":"query",
                  "description":"Address of the owner",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"slippagePercentage",
                  "required":false,
                  "in":"query",
                  "description":"Slippage percentage as a decimal value",
                  "examples":{
                     "1%":{
                        "value":0.01
                     },
                     "0.5%":{
                        "value":0.005
                     }
                  },
                  "schema":{
                     "type":"number"
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Network where the swap would be made",
                  "schema":{
                     "default":"ethereum",
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Exchange"
            ]
         }
      },
      "/v2/exchange/quote":{
         "get":{
            "operationId":"ExchangeController_getExchangeQuote",
            "summary":"Exchange Quote",
            "description":"Returns both the relative price for a trade as well as the call data used to sumbit a transaction for a trade. **Should only be called when a trade is ready to be submitted.**",
            "parameters":[
               {
                  "name":"gasPrice",
                  "required":false,
                  "in":"query",
                  "description":"Gas price (wei)",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"maxFeePerGas",
                  "required":false,
                  "in":"query",
                  "description":"Max gas fee (wei)",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"maxPriorityFeePerGas",
                  "required":false,
                  "in":"query",
                  "description":"Max priority gas fee (wei)",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sellTokenAddress",
                  "required":true,
                  "in":"query",
                  "description":"Address of the token that is being sold",
                  "examples":{
                     "ETH":{
                        "value":"0x0000000000000000000000000000000000000000"
                     },
                     "USDC":{
                        "value":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"buyTokenAddress",
                  "required":true,
                  "in":"query",
                  "description":"Address of the token that is being bought",
                  "examples":{
                     "ETH":{
                        "value":"0x0000000000000000000000000000000000000000"
                     },
                     "USDC":{
                        "value":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"sellAmount",
                  "required":false,
                  "in":"query",
                  "description":"Amount to sell in base units, if provided dont provide `buyAmount`",
                  "examples":{
                     "1 Ether":{
                        "value":"1000000000000000000"
                     },
                     "1 USDC":{
                        "value":"1000000"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"buyAmount",
                  "required":false,
                  "in":"query",
                  "description":"Amount to buy in base units, if provided dont provide `sellAmount`",
                  "examples":{
                     "1 Ether":{
                        "value":"1000000000000000000"
                     },
                     "1 USDC":{
                        "value":"1000000"
                     }
                  },
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ownerAddress",
                  "required":true,
                  "in":"query",
                  "description":"Address of the owner",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"slippagePercentage",
                  "required":true,
                  "in":"query",
                  "description":"Slippage percentage as a decimal value",
                  "examples":{
                     "1%":{
                        "value":0.01
                     },
                     "0.5%":{
                        "value":0.005
                     }
                  },
                  "schema":{
                     "type":"number"
                  }
               },
               {
                  "name":"network",
                  "required":false,
                  "in":"query",
                  "description":"Network where the swap would be made",
                  "schema":{
                     "default":"ethereum",
                     "enum":[
                        "ethereum",
                        "polygon",
                        "optimism",
                        "gnosis",
                        "binance-smart-chain",
                        "fantom",
                        "avalanche",
                        "arbitrum",
                        "celo",
                        "harmony",
                        "moonriver",
                        "bitcoin",
                        "cronos",
                        "aurora",
                        "evmos"
                     ],
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Exchange"
            ]
         }
      },
      "/v2/exchange/supported":{
         "get":{
            "operationId":"ExchangeController_getSupportedExchanges",
            "summary":"Supported exchanges",
            "description":"Returns the exchanges supported by Zapper API.",
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":""
               }
            },
            "security":[
               {
                  "basic":[
                     
                  ]
               }
            ],
            "tags":[
               "Exchange"
            ]
         }
      }
   },
   "info":{
      "title":"Zapper API",
      "description":"The Zapper API provides some of the most robust Defi related data, everything from liquidity and prices on different AMMs to complex Defi protocol balances all in one convenient place. In addition, the API also supports bridging between different networks. <br/><br/><br/> To obtain an API key submit a <a href=\"https://zapperfi.zendesk.com/hc/en-us/requests/new\">Zendesk ticket</a>.",
      "version":"2.0",
      "contact":{
         
      }
   },
   "tags":[
      {
         "name":"Apps",
         "description":"Get supported applications."
      },
      {
         "name":"Balances",
         "description":"Get balances of different supported applications for a specific address. Note that queries to the endpoint v2/balances are limited to 30 RPM"
      },
      {
         "name":"NFT Balances",
         "description":"Get NFT balances for addresses."
      },
      {
         "name":"Miscellaneous Data Endpoints",
         "description":"Genernal data endpoints."
      },
      {
         "name":"Exchange",
         "description":"Returns an easy to submit transaction for exchanging assets."
      }
   ],
   "servers":[
      {
         "url":"https://api.zapper.xyz"
      }
   ],
   "components":{
      "securitySchemes":{
         "basic":{
            "type":"http",
            "scheme":"basic",
            "description":"Enter your personal api key as username with a blank password"
         }
      },
      "schemas":{
         "GasPricesResponse":{
            "type":"object",
            "properties":{
               "standard":{
                  "type":"object",
                  "description":"Standard gas price (gwei)"
               },
               "fast":{
                  "type":"object",
                  "description":"Fast gas price (gwei)"
               },
               "instant":{
                  "type":"object",
                  "description":"Instant gas price (gwei)"
               },
               "eip1559":{
                  "type":"boolean",
                  "description":"Is gas price according to EIP1559"
               }
            },
            "required":[
               "standard",
               "fast",
               "instant",
               "eip1559"
            ]
         }
      }
   }
}
