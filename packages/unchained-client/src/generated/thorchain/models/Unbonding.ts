// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Thorchain Unchained API
 * Provides access to thorchain chain data.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UnbondingEntry } from './UnbondingEntry';
import {
    UnbondingEntryFromJSON,
    UnbondingEntryFromJSONTyped,
    UnbondingEntryToJSON,
} from './UnbondingEntry';
import type { Validator } from './Validator';
import {
    ValidatorFromJSON,
    ValidatorFromJSONTyped,
    ValidatorToJSON,
} from './Validator';

/**
 * Contains info about a staking unbonding
 * @export
 * @interface Unbonding
 */
export interface Unbonding {
    /**
     * 
     * @type {Array<UnbondingEntry>}
     * @memberof Unbonding
     */
    entries: Array<UnbondingEntry>;
    /**
     * 
     * @type {Validator}
     * @memberof Unbonding
     */
    validator: Validator;
}

/**
 * Check if a given object implements the Unbonding interface.
 */
export function instanceOfUnbonding(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "entries" in value;
    isInstance = isInstance && "validator" in value;

    return isInstance;
}

export function UnbondingFromJSON(json: any): Unbonding {
    return UnbondingFromJSONTyped(json, false);
}

export function UnbondingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Unbonding {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entries': ((json['entries'] as Array<any>).map(UnbondingEntryFromJSON)),
        'validator': ValidatorFromJSON(json['validator']),
    };
}

export function UnbondingToJSON(value?: Unbonding | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entries': ((value.entries as Array<any>).map(UnbondingEntryToJSON)),
        'validator': ValidatorToJSON(value.validator),
    };
}

