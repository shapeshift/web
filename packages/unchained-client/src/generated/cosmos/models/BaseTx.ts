// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Cosmos Unchained API
 * Provides access to cosmos chain data.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Contains info about required base transaction details
 * @export
 * @interface BaseTx
 */
export interface BaseTx {
    /**
     * 
     * @type {string}
     * @memberof BaseTx
     */
    blockHash?: string;
    /**
     * 
     * @type {number}
     * @memberof BaseTx
     */
    blockHeight: number;
    /**
     * 
     * @type {number}
     * @memberof BaseTx
     */
    timestamp: number;
    /**
     * 
     * @type {string}
     * @memberof BaseTx
     */
    txid: string;
}

/**
 * Check if a given object implements the BaseTx interface.
 */
export function instanceOfBaseTx(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "blockHeight" in value;
    isInstance = isInstance && "timestamp" in value;
    isInstance = isInstance && "txid" in value;

    return isInstance;
}

export function BaseTxFromJSON(json: any): BaseTx {
    return BaseTxFromJSONTyped(json, false);
}

export function BaseTxFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseTx {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockHash': !exists(json, 'blockHash') ? undefined : json['blockHash'],
        'blockHeight': json['blockHeight'],
        'timestamp': json['timestamp'],
        'txid': json['txid'],
    };
}

export function BaseTxToJSON(value?: BaseTx | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockHash': value.blockHash,
        'blockHeight': value.blockHeight,
        'timestamp': value.timestamp,
        'txid': value.txid,
    };
}

