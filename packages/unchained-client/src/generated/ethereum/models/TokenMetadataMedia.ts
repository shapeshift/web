// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * @shapeshiftoss/ethereum-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenMetadataMedia
 */
export interface TokenMetadataMedia {
    /**
     * 
     * @type {string}
     * @memberof TokenMetadataMedia
     */
    type?: TokenMetadataMediaTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TokenMetadataMedia
     */
    url: string;
}


/**
 * @export
 */
export const TokenMetadataMediaTypeEnum = {
    Image: 'image',
    Video: 'video'
} as const;
export type TokenMetadataMediaTypeEnum = typeof TokenMetadataMediaTypeEnum[keyof typeof TokenMetadataMediaTypeEnum];


/**
 * Check if a given object implements the TokenMetadataMedia interface.
 */
export function instanceOfTokenMetadataMedia(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function TokenMetadataMediaFromJSON(json: any): TokenMetadataMedia {
    return TokenMetadataMediaFromJSONTyped(json, false);
}

export function TokenMetadataMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenMetadataMedia {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'url': json['url'],
    };
}

export function TokenMetadataMediaToJSON(value?: TokenMetadataMedia | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'url': value.url,
    };
}

