// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Cosmos Unchained API
 * Provides access to cosmos chain data.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Value } from './Value';
import {
    ValueFromJSON,
    ValueFromJSONTyped,
    ValueToJSON,
} from './Value';

/**
 * Contains common cosmossdk info about account details for an address or xpub
 * @export
 * @interface CosmosSDKAccount
 */
export interface CosmosSDKAccount {
    /**
     * 
     * @type {string}
     * @memberof CosmosSDKAccount
     */
    balance: string;
    /**
     * 
     * @type {string}
     * @memberof CosmosSDKAccount
     */
    pubkey: string;
    /**
     * 
     * @type {string}
     * @memberof CosmosSDKAccount
     */
    unconfirmedBalance: string;
    /**
     * 
     * @type {number}
     * @memberof CosmosSDKAccount
     */
    accountNumber: number;
    /**
     * 
     * @type {Array<Value>}
     * @memberof CosmosSDKAccount
     */
    assets: Array<Value>;
    /**
     * 
     * @type {number}
     * @memberof CosmosSDKAccount
     */
    sequence: number;
}

/**
 * Check if a given object implements the CosmosSDKAccount interface.
 */
export function instanceOfCosmosSDKAccount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "balance" in value;
    isInstance = isInstance && "pubkey" in value;
    isInstance = isInstance && "unconfirmedBalance" in value;
    isInstance = isInstance && "accountNumber" in value;
    isInstance = isInstance && "assets" in value;
    isInstance = isInstance && "sequence" in value;

    return isInstance;
}

export function CosmosSDKAccountFromJSON(json: any): CosmosSDKAccount {
    return CosmosSDKAccountFromJSONTyped(json, false);
}

export function CosmosSDKAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CosmosSDKAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'balance': json['balance'],
        'pubkey': json['pubkey'],
        'unconfirmedBalance': json['unconfirmedBalance'],
        'accountNumber': json['accountNumber'],
        'assets': ((json['assets'] as Array<any>).map(ValueFromJSON)),
        'sequence': json['sequence'],
    };
}

export function CosmosSDKAccountToJSON(value?: CosmosSDKAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'balance': value.balance,
        'pubkey': value.pubkey,
        'unconfirmedBalance': value.unconfirmedBalance,
        'accountNumber': value.accountNumber,
        'assets': ((value.assets as Array<any>).map(ValueToJSON)),
        'sequence': value.sequence,
    };
}

