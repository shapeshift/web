name: Cypress Tests

on:
  workflow_call:

env:
  ESLINT_NO_DEV_ERRORS: true
  TSC_COMPILE_ON_ERROR: true
  IMAGE_INLINE_SIZE_LIMIT: 0
  INLINE_RUNTIME_CHUNK: false
  REACT_APP_UNCHAINED_ETHEREUM_HTTP_URL: https://dev-api.ethereum.shapeshift.com
  REACT_APP_UNCHAINED_ETHEREUM_WS_URL: wss://dev-api.ethereum.shapeshift.com
  REACT_APP_UNCHAINED_BITCOIN_HTTP_URL: https://dev-api.bitcoin.shapeshift.com
  REACT_APP_UNCHAINED_BITCOIN_WS_URL: wss://dev-api.bitcoin.shapeshift.com
  REACT_APP_UNCHAINED_COSMOS_HTTP_URL: https://dev-api.cosmos.shapeshift.com
  REACT_APP_UNCHAINED_COSMOS_WS_URL: wss://dev-api.cosmos.shapeshift.com
  REACT_APP_UNCHAINED_OSMOSIS_HTTP_URL: https://dev-api.osmosis.shapeshift.com
  REACT_APP_UNCHAINED_OSMOSIS_WS_URL: wss://dev-api.osmosis.shapeshift.com  
  REACT_APP_PORTIS_DAPP_ID: 8609e6a8-e0dc-45e6-a0ad-edde63a4cdda
  REACT_APP_ETHEREUM_NODE_URL: https://mainnet.infura.io/v3/d734c7eebcdf400185d7eb67322a7e57
  REACT_APP_WALLET_MIGRATION_URL: https://axiom-wallet-migration-api.megacluster.stage.chiefhappinessofficerellie.org/api/migrate
  REACT_APP_FRIENDLY_CAPTCHA_SITE_KEY: FCMM7AFC0S6A8NUK

  REACT_APP_GEM_ASSET_LOGO: https://gem-widgets-assets.s3-us-west-2.amazonaws.com/currencies/crypto/
  REACT_APP_GEM_API_KEY: bb4164a72246dae1e03010d664d6cdae4e19b2554de02e3bf6c3cd30aa7e359e
  REACT_APP_GEM_WYRE_SUPPORTED_COINS: https://api.gem.co/institutions/wyre/supported_currencies
  REACT_APP_GEM_COINIFY_SUPPORTED_COINS: https://api.gem.co/institutions/coinify/supported_currencies
  REACT_APP_GEM_ENV: production

jobs:
  test-chrome:
    name: Run Cypress
    runs-on: ubuntu-latest
    strategy:
      # When one test fails, do not cancel the other
      # containers, because this will kill Cypress processes,
      # leaving the Dashboard hanging: https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # Run 3 copies of the current job in parallel
        # We can continue adding more as our test suite grows
        containers: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: Download Build Folder
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Verify Cypress
        env:
          # Make sure every Cypress install prints minimal information
          CI: 1
        # cache path: Print the path to the Cypress cache folder
        # cache list: Print all existing installed versions of Cypress
        # verify: Verify that Cypress is installed correctly and is executable
        # info: Prints information about Cypress and the current environment
        run: |
          npx cypress install
          npx cypress cache path
          npx cypress cache list
          npx cypress verify
          npx cypress info

      # Because of "record" and "parallel" parameters
      # our workers will load balance all found tests among themselves
      #
      # Testing: Local Docker resources in settings may need to be increased to
      # closer reflect Github runner resources.
      # @see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
      - name: Cypress Run
        uses: cypress-io/github-action@v3
        with:
          record: true
          start: yarn dev
          parallel: true
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 300 # seconds
          browser: chrome
          group: 'Chrome tests'
        env:
          CYPRESS_PROJECT_ID: 'vpyrho'
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY || '05f1a79d-0c03-406b-8cf0-ca9ad10fa664' }}
          # Passing the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
