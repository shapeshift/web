// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Thorchain Unchained API
 * Provides access to thorchain chain data.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Validator } from './Validator';
import {
    ValidatorFromJSON,
    ValidatorFromJSONTyped,
    ValidatorToJSON,
} from './Validator';
import type { Value } from './Value';
import {
    ValueFromJSON,
    ValueFromJSONTyped,
    ValueToJSON,
} from './Value';

/**
 * Contains info about a validator reward
 * @export
 * @interface Reward
 */
export interface Reward {
    /**
     * 
     * @type {Array<Value>}
     * @memberof Reward
     */
    rewards: Array<Value>;
    /**
     * 
     * @type {Validator}
     * @memberof Reward
     */
    validator: Validator;
}

/**
 * Check if a given object implements the Reward interface.
 */
export function instanceOfReward(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rewards" in value;
    isInstance = isInstance && "validator" in value;

    return isInstance;
}

export function RewardFromJSON(json: any): Reward {
    return RewardFromJSONTyped(json, false);
}

export function RewardFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reward {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rewards': ((json['rewards'] as Array<any>).map(ValueFromJSON)),
        'validator': ValidatorFromJSON(json['validator']),
    };
}

export function RewardToJSON(value?: Reward | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rewards': ((value.rewards as Array<any>).map(ValueToJSON)),
        'validator': ValidatorToJSON(value.validator),
    };
}

