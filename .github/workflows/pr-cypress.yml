name: Cypress Tests

on:
  workflow_call:

jobs:
  test-chrome:
    name: Cypress
    runs-on: size-bertha
    strategy:
      # When one test fails, do not cancel the other
      # containers, because this will kill Cypress processes,
      # leaving the Dashboard hanging: https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # Run 1 copy of the current job in parallel
        # We can continue adding more as our test suite grows
        containers: [1]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Install
        run: yarn install --frozen-lockfile

      - name: Add environment variables
        run: yarn env app

      # Because of "record" and "parallel" parameters
      # our workers will load balance all found tests among themselves
      #
      # Testing: Local Docker resources in settings may need to be increased to
      # closer reflect Github runner resources.
      # @see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
      - name: Cypress Run
        uses: cypress-io/github-action@v4
        with:
          record: true
          start: yarn dev:silent
          parallel: true
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 600 # seconds
          browser: chrome
          group: 'Chrome tests'
        env:
          CYPRESS_PROJECT_ID: 'vpyrho'
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY || '05f1a79d-0c03-406b-8cf0-ca9ad10fa664' }}
          # Passing the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
